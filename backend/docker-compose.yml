version: '3.8'

services:
  db:
    image: postgres:latest
    volumes:
      - ./db/dataset:/docker-entrypoint-initdb.d
      # Optional: - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: meineDatenbank
      POSTGRES_USER: meinBenutzer
      POSTGRES_PASSWORD: meinPasswort
    # Entfernen der Ports, um den Zugriff von au√üen zu verhindern
    # ports:
    #   - "5432:5432"

  app:
    image: node:20
    volumes:
      - .:/app
      - /app/node_modules
    working_dir: /app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
    command: bash -c "npm install && npm start"
    depends_on:
      - db


  caddy:
    image: caddy:2
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - app

  osrm:
    image: osrm/osrm-backend
    volumes:
      - ./data:/data
    ports:
      - '5000:5000'
    command: /bin/bash -c "\
      if [ -f /data/niedersachsen-latest.osrm ]; then \
        echo 'Datei gefunden, starte osrm-routed...'; \
        osrm-routed --algorithm mld /data/niedersachsen-latest.osrm; \
      else \
        echo 'Datei nicht gefunden, starte Generierungsprozess...'; \
        osrm-extract -p /opt/foot.lua /data/niedersachsen-latest.osm.pbf && \
        osrm-partition /data/niedersachsen-latest.osrm && \
        osrm-customize /data/niedersachsen-latest.osrm && \
        osrm-routed --algorithm mld /data/niedersachsen-latest.osrm; \
      fi"
    depends_on:
      - app

volumes:
  #postgres-data:
  caddy_data:
  caddy_config:
